@using Domain.Repositories.Interfaces
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Model
@inherits LayoutComponentBase

@inject ProtectedSessionStorage ProtectedSessionStorage
@inject IRepositoryAsync<User> UserRepository

<div class="sidebar">
    <nav class="nav flex-column">
        <NavLink href="/" class="nav-link logo" Match="NavLinkMatch.All">
            <span class="fs-3">Magical Diary</span>
        </NavLink>
        <NavLink href="/Login" class="nav-link">
            <span>Login</span>
        </NavLink>
        <NavLink href="/signup" class="nav-link">
            <span>Create Account</span>
        </NavLink>
        <NavLink href="/Logout" class="nav-link">
            <span>Logout</span>
        </NavLink>
        @switch (User.Modus)
        {
            case EModus.IsHalloween:
                <NavLink href="/H_DiaryEntryPage" class="nav-link">
                    <span>Diary</span>
                </NavLink>
                <NavLink href="/H_DiaryHomepage" class="nav-link">
                    <span>Your Entries</span>
                </NavLink>
                break;
            case EModus.IsMagic:
                <NavLink href="/M_DiaryEntryPage" class="nav-link">
                    <span>Diary</span>
                </NavLink>
                <NavLink href="/M_DiaryHomepage" class="nav-link">
                    <span>Your Entries</span>
                </NavLink>
                break;
            default:
                <NavLink href="/DiaryEntryPage" class="nav-link">
                    <span>Diary</span>
                </NavLink>
                <NavLink href="/DiaryHomepage" class="nav-link">
                    <span>Your Entries</span>
                </NavLink>
                break;
        }
        
    </nav>
</div>

<style>
    .sidebar {
        width:250px;
        height: 100vh;
        position: fixed;
        background-color: #f8f9fa;
        padding: 0px;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    }
    .logo{
        color:#775A4D;
        font-family: Rakkas;
    }
    .navbar-brand :hover {
        color: #6A5C55;
    }
    .nav{
        color: #6A5C55;
    }
</style>

@code
{
    public User User = new User();
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //Hier muss die im EntryRepository definierte Methode GetEntriesForUser() aufgerufen werden
        var result = await ProtectedSessionStorage.GetAsync<int>("UserId");
        if (result.Success)
            User = await UserRepository.ReadAsync(result.Value);
    }
    
}
